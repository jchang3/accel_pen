/*************************************************************************
 * Copyright (c) 2004 Altera Corporation, San Jose, California, USA.      *
 * All rights reserved. All use of this software and documentation is     *
 * subject to the License Agreement located at the end of this file below.*
 **************************************************************************
 * Description:                                                           *
 * The following is a simple hello world program running MicroC/OS-II.The *
 * purpose of the design is to be a very simple application that just     *
 * demonstrates MicroC/OS-II running on NIOS II.The design doesn't account*
 * for issues such as checking system call return codes. etc.             *
 *                                                                        *
 * Requirements:                                                          *
 *   -Supported Example Hardware Platforms                                *
 *     Standard                                                           *
 *     Full Featured                                                      *
 *     Low Cost                                                           *
 *   -Supported Development Boards                                        *
 *     Nios II Development Board, Stratix II Edition                      *
 *     Nios Development Board, Stratix Professional Edition               *
 *     Nios Development Board, Stratix Edition                            *
 *     Nios Development Board, Cyclone Edition                            *
 *   -System Library Settings                                             *
 *     RTOS Type - MicroC/OS-II                                           *
 *     Periodic System Timer                                              *
 *   -Know Issues                                                         *
 *     If this design is run on the ISS, terminal output will take several*
 *     minutes per iteration.                                             *
 **************************************************************************/

#include <stdio.h>
#include "includes.h"
#include "dtw.h"
#include <time.h>

/* Definition of Task Stacks */
#define   TASK_STACKSIZE       2048
OS_STK task1_stk[TASK_STACKSIZE];


/* Definition of Task Priorities */

#define TASK1_PRIORITY      1


#define FILE_SIZE 100
//#define INIT_PTR_SIZE 100

OS_EVENT *sem;
INT8U err;

/* Prints "Hello World" and sleeps for three seconds */
void task1(void* pdata) {
	//char str[FILE_SIZE];
	int init_size = 50;

	int *t1;
	int *t2;
	int *temp;
	//FILE *fp;

	char * pStr;
	int index = 0;
	int i;

	clock_t t;


	signed char str[400] = {-5, -1, 0, 5, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2, -2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2, -2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2, -2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2,-2, -1, 0, 1, 2};
			//"0	0.0314146346236414	0.0628215181562566	0.0942129014192853	0.125581039058627	0.156918191455690	0.188216626637029	0.219468622182091	0.250666467128609	0.281802463875165	0.312868930080462	0.343858200558819	0.374762629171449	0.405574590713025	0.436286482793085	0.466890727711811	0.497379774329710	0.527746099930746	0.557982212078459	0.588080650464608	0.618033988749895	0.647834836396299	0.677475840490583	0.706949687558514	0.736249105369356	0.765366864730180	0.794295781269561	0.823028717210218	0.851558583130145	0.879878339711830	0.907980999479094	0.935859628521147	0.963507348203431	0.990917336864815	1.01808283150074	1.04499712943190	1.07165358995799	1.09804563599626	1.12416675570426	1.15001050408656	1.17557050458495	1.20084045065177	1.22581410730595	1.25048531267141	1.27484797949738	1.29889609666037	1.32262373064730	1.34602502701955	1.36909421185738	1.39182559318463	1.41421356237310	1.43625259552638	1.45793725484282	1.47926218995722	1.50022213926092	1.52081193120006	1.54102648555158	1.56086081467666	1.58031002475138	1.59936931697418	1.61803398874990	1.63629943485005	1.65416114854912	1.67161472273654	1.68865585100403	1.70528032870818	1.72148405400789	1.73726302887638	1.75261336008773	1.76753126017739	1.78201304837674	1.79605515152123	1.80965410493204	1.82280655327089	1.83550925136796	1.84775906502257	1.85955297177650	1.87088806165973	1.88176153790845	1.89217071765509	1.90211303259031	1.91158602959666	1.92058737135389	1.92911483691560	1.93716632225726	1.94473984079535	1.95183352387749	1.95844562124353	1.96457450145738	1.97021865230955	1.97537668119028	1.98004731543312	1.98422940262896	1.98792191091036	1.99112392920616	1.99383466746626	1.99605345685654	1.99777974992394	1.99901312073146	1.99975326496332	2	1.99975326496332	1.99901312073146	1.99777974992394	1.99605345685654	1.99383466746626	1.99112392920616	1.98792191091036	1.98422940262896	1.98004731543312	1.97537668119028	1.97021865230955	1.96457450145738	1.95844562124353	1.95183352387749	1.94473984079535	1.93716632225726	1.92911483691560	1.92058737135389	1.91158602959666	1.90211303259031	1.89217071765509	1.88176153790845	1.87088806165973	1.85955297177650	1.84775906502257	1.83550925136796	1.82280655327089	1.80965410493204	1.79605515152123	1.78201304837674	1.76753126017739	1.75261336008773	1.73726302887638	1.72148405400789	1.70528032870818	1.68865585100403	1.67161472273654	1.65416114854912	1.63629943485005	1.61803398874990	1.59936931697418	1.58031002475138	1.56086081467666	1.54102648555158	1.52081193120006	1.50022213926092	1.47926218995722	1.45793725484282	1.43625259552638	1.41421356237310	1.39182559318463	1.36909421185738	1.34602502701955	1.32262373064730	1.29889609666037	1.27484797949738	1.25048531267141	1.22581410730595	1.20084045065177	1.17557050458495	1.15001050408656	1.12416675570426	1.09804563599626	1.07165358995799	1.04499712943190	1.01808283150074	0.990917336864816	0.963507348203431	0.935859628521147	0.907980999479094	0.879878339711831	0.851558583130146	0.823028717210217	0.794295781269561	0.765366864730180	0.736249105369356	0.706949687558515	0.677475840490583	0.647834836396299	0.618033988749895	0.588080650464608	0.557982212078458	0.527746099930746	0.497379774329710	0.466890727711811	0.436286482793085	0.405574590713025	0.374762629171449	0.343858200558819	0.312868930080462	0.281802463875165	0.250666467128609	0.219468622182091	0.188216626637029	0.156918191455690	0.125581039058627	0.0942129014192859	0.0628215181562565	0.0314146346236414	2.44929359829471e-16	-0.0314146346236400	-0.0628215181562560	-0.0942129014192854	-0.125581039058627	-0.156918191455689	-0.188216626637028	-0.219468622182091	-0.250666467128609	-0.281802463875164	-0.312868930080461	-0.343858200558819	-0.374762629171450	-0.405574590713024	-0.436286482793084	-0.466890727711811	-0.497379774329710	-0.527746099930745	-0.557982212078458	-0.588080650464608	-0.618033988749896	-0.647834836396298	-0.677475840490582	-0.706949687558514	-0.736249105369357	-0.765366864730179	-0.794295781269560	-0.823028717210217	-0.851558583130145	-0.879878339711830	-0.907980999479093	-0.935859628521146	-0.963507348203431	-0.990917336864815	-1.01808283150074	-1.04499712943190	-1.07165358995799	-1.09804563599626	-1.12416675570426	-1.15001050408656	-1.17557050458495	-1.20084045065177	-1.22581410730595	-1.25048531267141	-1.27484797949738	-1.29889609666037	-1.32262373064730	-1.34602502701955	-1.36909421185738	-1.39182559318463	-1.41421356237310	-1.43625259552638	-1.45793725484282	-1.47926218995722	-1.50022213926092	-1.52081193120006	-1.54102648555158	-1.56086081467666	-1.58031002475138	-1.59936931697418	-1.61803398874989	-1.63629943485005	-1.65416114854912	-1.67161472273654	-1.68865585100403	-1.70528032870818	-1.72148405400789	-1.73726302887638	-1.75261336008773	-1.76753126017739	-1.78201304837674	-1.79605515152123	-1.80965410493204	-1.82280655327089	-1.83550925136796	-1.84775906502257	-1.85955297177650	-1.87088806165973	-1.88176153790845	-1.89217071765509	-1.90211303259031	-1.91158602959666	-1.92058737135389	-1.92911483691560	-1.93716632225726	-1.94473984079535	-1.95183352387749	-1.95844562124353	-1.96457450145738	-1.97021865230955	-1.97537668119028	-1.98004731543312	-1.98422940262896	-1.98792191091036	-1.99112392920616	-1.99383466746626	-1.99605345685654	-1.99777974992394	-1.99901312073146	-1.99975326496332	-2	-1.99975326496332	-1.99901312073146	-1.99777974992394	-1.99605345685654	-1.99383466746626	-1.99112392920616	-1.98792191091036	-1.98422940262896	-1.98004731543312	-1.97537668119028	-1.97021865230955	-1.96457450145738	-1.95844562124353	-1.95183352387749	-1.94473984079535	-1.93716632225726	-1.92911483691560	-1.92058737135389	-1.91158602959666	-1.90211303259031	-1.89217071765509	-1.88176153790845	-1.87088806165974	-1.85955297177650	-1.84775906502257	-1.83550925136796	-1.82280655327089	-1.80965410493204	-1.79605515152123	-1.78201304837674	-1.76753126017739	-1.75261336008773	-1.73726302887638	-1.72148405400789	-1.70528032870818	-1.68865585100403	-1.67161472273654	-1.65416114854912	-1.63629943485005	-1.61803398874990	-1.59936931697418	-1.58031002475138	-1.56086081467666	-1.54102648555158	-1.52081193120006	-1.50022213926092	-1.47926218995722	-1.45793725484282	-1.43625259552638	-1.41421356237310	-1.39182559318463	-1.36909421185738	-1.34602502701955	-1.32262373064730	-1.29889609666037	-1.27484797949738	-1.25048531267141	-1.22581410730595	-1.20084045065177	-1.17557050458495	-1.15001050408656	-1.12416675570426	-1.09804563599626	-1.07165358995799	-1.04499712943190	-1.01808283150074	-0.990917336864815	-0.963507348203431	-0.935859628521147	-0.907980999479094	-0.879878339711831	-0.851558583130146	-0.823028717210218	-0.794295781269561	-0.765366864730181	-0.736249105369357	-0.706949687558514	-0.677475840490585	-0.647834836396299	-0.618033988749895	-0.588080650464609	-0.557982212078459	-0.527746099930747	-0.497379774329711	-0.466890727711810	-0.436286482793087	-0.405574590713025	-0.374762629171449	-0.343858200558819	-0.312868930080462	-0.281802463875166	-0.250666467128609	-0.219468622182090	-0.188216626637030	-0.156918191455690	-0.125581039058627	-0.0942129014192853	-0.0628215181562567	-0.0314146346236417";

	while (1) {
		OSSemPend(sem, 0, &err);
		printf("DTW test\n");
		t1 = malloc(init_size*sizeof(int));
		if (t1 == NULL) {
			printf("1Error allocating memory\n"); //print an error message
			return;
		}
		t2 = malloc(init_size*sizeof(int));
		if (t2 == NULL) {
			printf("Error allocating memory\n"); //print an error message
			return;
		}


//		// Open file
//		fp = fopen("200hz.txt", "w");
//		if (fp == NULL) {
//			printf("File does not exist");
//			exit(1);
//		}
//		exit(1);

		//fgets(str, FILE_SIZE, file);
		//fclose(fp);

		//pStr = strtok(str, " ");
		//
		//printf("strtok\n");
		for(i=0; i<5; i++){
			*(t1+index) = (int)(str[i] * 100);
			*(t2+index) = (int)((str[i]+1)* 100);
			index++;
		    //pStr = strtok (NULL, " ");
			if(index == init_size){
				temp = realloc(t1, (init_size+100)*sizeof(int));
				if(temp != NULL){
					t1 = temp;
				}
				else{
					printf("Error reallocating memory\n");
					free(t1);
					return;
				}
				temp = realloc(t2, (init_size+100)*sizeof(int));
				if(temp != NULL){
					t1 = temp;
				}
				else{
					printf("Error reallocating memory\n");
					free(t2);
					return;
				}
				init_size += 100;
			}
		}
		//int i;
//		for(i=0; i<index; i++){
//			printf("%d  %d\n", i, t2[i]);
//		}
		t = clock();



		int answer = dtw(t1, t2, index, index);
		//pass t1 and t2 to dtw
		//runtime
		t = clock() - t;
		float time = ((float) t) / CLOCKS_PER_SEC;
		printf("%d   time = %f", answer, time);
		free(t1);
		free(t2);
	}
}

/* The main function creates two task and starts multi-tasking */
int main(void) {

	sem = OSSemCreate(1);
	OSTaskCreateExt(task1, NULL, (void *) &task1_stk[TASK_STACKSIZE - 1],
			TASK1_PRIORITY, TASK1_PRIORITY, task1_stk, TASK_STACKSIZE, NULL, 0);


	OSStart();
	return 0;
}

/******************************************************************************
 *                                                                             *
 * License Agreement                                                           *
 *                                                                             *
 * Copyright (c) 2004 Altera Corporation, San Jose, California, USA.           *
 * All rights reserved.                                                        *
 *                                                                             *
 * Permission is hereby granted, free of charge, to any person obtaining a     *
 * copy of this software and associated documentation files (the "Software"),  *
 * to deal in the Software without restriction, including without limitation   *
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
 * and/or sell copies of the Software, and to permit persons to whom the       *
 * Software is furnished to do so, subject to the following conditions:        *
 *                                                                             *
 * The above copyright notice and this permission notice shall be included in  *
 * all copies or substantial portions of the Software.                         *
 *                                                                             *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
 * DEALINGS IN THE SOFTWARE.                                                   *
 *                                                                             *
 * This agreement shall be governed in all respects by the laws of the State   *
 * of California and by the laws of the United States of America.              *
 * Altera does not recommend, suggest or require that this reference design    *
 * file be used in conjunction or combination with any other product.          *
 ******************************************************************************/
